class Playa {

	field int id;
	field String name;
	field int linesSent;
	field int linesReceived;
	field int KO;
	field int combo;
	field int garbageHeight;
	
	constructor Playa new(int ID, String name)
	{
		let ID = ID;
		let name = name;
		let linesSent = 0;
		let linesReceived = 0;
		let KO = 0;
		let combo = 0;
		let stackHeight = 0;
		return this;
	}

	method void dispose() {
		do Memory.deAlloc(this);
		return;
	}

	method void addLinesSent(int lines){
		let linesSent = linesSent + lines;
		return;
	}

    method void resetLinesReceived(){
    	let linesReceived = 0;
    	return;
    }
    method void addLinesReceived(int lines){
    	let linesReceived = linesReceived + lines;
    	return;
    }
    method int getLinesReceived(){
    	return linesReceived;
    }

    method void resetCombo(){
    	let combo = 0;
    }
    method void incCombo(){
    	let combo = combo + 1;
    }
    method int getCombo(){
    	return combo;
    }

    method void incKO(){
    	let KO = KO + 1;
    	return;
    }
    method int getKO(){
    	return KO;
    }

    method int getGarbage(Map M){
		if((linesReceived + M.getHeight()) >= 20)
			return -1; //dead
		
    	return 1;
    }
    method void clearGarbage(){
		/* 林芸平是先知吧！！！*/
		var int tmp;
    	let tmp = garbageHeight;
        while(tmp > 0)
        {
            let i = 19;
            while(i > 0)
            {
                let j = 0;
                while(j<10)
                {
                    let cells[i*10+j] = cells[i*10+j-10];
                    let j = j + 1;
                }
                let i = i - 1;
            }
            let j = 0;
            while(j<10)
            {
                let cells[j] = 0;
                let j = j + 1;
            }
            let tmp = tmp - 1;
		}
		garbageHeight = 0;
    	return;
	}
	
	

}
