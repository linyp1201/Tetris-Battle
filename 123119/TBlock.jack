class TBlock{
    field int r,c;
    //the position of this one should be considered carefully or be redefined
    constructor TBlock new(Map A)
    {
        let r = 1;
        let c = 4;
        do A.set(r,c);
        do A.set(r,c+1);
        do A.set(r,c+2);
        do A.set(r-1, c+1);
        return this;
    }

    method void dispose() {
      do Memory.deAlloc(this);
      return;
    }

    // Put into TBlock.jack

    method void T_rotate(map M, int r, int c)
    {	
      var int type;

      if (r< 19) and (c> 0) and (c< 9)
      {
        if ( M.cell[r*10+ c]= 1 ) and ( M.cell[r*10+ (c-1)]= 1 ) and ( M.cell[r*10+ (c+1)]= 1 ) and ( M.cell[(r+1)*10+ c]= 1 )
          let type= 0;
      }
          
      if (r> 0) and (r< 19) and (c> 0)
      {
        if ( M.cell[r*10+ c]= 1 ) and ( M.cell[(r-1)*10+ c]= 1 ) and ( M.cell[r*10+ (c-1)]= 1 ) and ( M.cell[(r+1)*10+ c]= 1 )
          let type= 1;
      }			
          
      if (r> 0) and (c> 0) and (c< 9)
      {
        if ( M.cell[r*10+ c]= 1 ) and ( M.cell[(r-1)*10+ c]= 1 ) and ( M.cell[r*10+ (c-1)]= 1 ) and ( M.cell[r*10+ (c+1)]= 1 )
          let type= 2;
      }

      if (r> 0) and (r< 19) and (c< 9)
      {
        if ( M.cell[r*10+ c]= 1 ) and ( M.cell[(r-1)*10+ c]= 1 ) and ( M.cell[r*10+ (c+1)]= 1 ) and ( M.cell[(r+1)*10+ c]= 1 )
          let type= 3;
      }

      if (type= 0)
      {	
        if (r= 0)
        {
          // cannot collide w/ others
          if ( M.cell[(r+1)*10+ (c-1)]= 1 ) or ( M.cell[(r+2)*10+ c]= 1 )
            break;

          // implement
          do M.reset(r, c-1);
          do M.reset(r, c+1);
          do M.set(r+1, c-1);
          do M.set(r+2, c);

          // after 500ms or click down:
          // do M.reset(r, c);
          // do M.reset(r+1, c-1);
          // do M.reset(r+1, c);
          // do M.reset(r+2 ,c);
          // do M.set(r+1, c);
          // do M.set(r+2, c-1);
          // do M.set(r+2, c-1);
          // do M.set(r+3 ,c);
          // outside loop r+1
        }
        else
        {
          // cannot collide w/ others
          if ( M.cell[(r-1)*10+ c]= 1 )
            break;

          // implement
          do M.reset(r, c+1);
          do M.set(r-1, c);

          // after 500ms or click down:
          // do M.reset(r-1, c);
          // do M.reset(r, c-1);
          // do M.reset(r, c);
          // do M.reset(r+1 ,c);
          // do M.set(r, c);
          // do M.set(r+1, c-1);
          // do M.set(r+1, c);
          // do M.set(r+2 ,c);
          // outside loop r+1
        }
      }

      if (type= 1)
      {	
        if (c= 9)
        {
          // cannot collide w/ others
          if ( M.cell[(r-1)*10+ (c-1)]= 1 ) or ( M.cell[r*10+ (c-2)]= 1 )
            break;

          // implement
          do M.reset(r-1, c);
          do M.reset(r+1, c);
          do M.set(r-1, c-1);
          do M.set(r, c-2);

          // after 500ms or click down:
          // do M.reset(r-1, c-1);
          // do M.reset(r, c-2);
          // do M.reset(r, c-1);
          // do M.reset(r ,c);
          // do M.set(r, c-1);
          // do M.set(r+1, c-2);
          // do M.set(r+1, c-1);
          // do M.set(r+1 ,c);
          // outside loop r+1
        }
        else
        {
          // cannot collide w/ others
          if ( M.cell[r*10+ (c+1)]= 1 )
            break;

          // implement
          do M.reset(r+1, c);
          do M.set(r, c+1);

          // after 500ms or click down:
          // do M.reset(r-1, c);
          // do M.reset(r, c-1);
          // do M.reset(r, c);
          // do M.reset(r ,c+1);
          // do M.set(r, c);
          // do M.set(r+1, c-1);
          // do M.set(r+1, c);
          // do M.set(r+1 ,c+1);
          // outside loop r+1
        }
      }

      if (type= 2)
      {	
        if (r= 19)
        {
          // cannot collide w/ others
          if ( M.cell[(r-2)*10+ c]= 1 ) or ( M.cell[(r-1)*10+ (c+1)]= 1 )
            break;

          // implement
          do M.reset(r, c-1);
          do M.reset(r, c+1);
          do M.set(r-2, c);
          do M.set(r-1, c+1);
        }
        else
        {
          // cannot collide w/ others
          if ( M.cell[(r+1)*10+ c]= 1 )
            break;

          // implement
          do M.reset(r, c-1);
          do M.set(r+1, c);
        }
      }

      if (type= 3)
      {	
        if (c= 0)
        {
          // cannot collide w/ others
          if ( M.cell[r*10+ (c+2)]= 1 ) or ( M.cell[(r+1)*10+ (c+1)]= 1 )
            break;

          // implement
          do M.reset(r-1, c);
          do M.reset(r+1, c);
          do M.set(r, c+2);
          do M.set(r+1, c+1);

          // after 500ms or click down:
          // do M.reset(r, c);
          // do M.reset(r, c+1);
          // do M.reset(r, c+2);
          // do M.reset(r+1 ,c+1);
          // do M.set(r+1, c);
          // do M.set(r+1, c+1);
          // do M.set(r+1, c+2);
          // do M.set(r+2 ,c+1);
          // outside loop r+1
        }
        else
        {
          // cannot collide w/ others
          if ( M.cell[r*10+ (c-1)]= 1 )
            break;

          // implement
          do M.reset(r-1, c);
          do M.set(r, c-1);

          // after 500ms or click down:
          // do M.reset(r, c-1);
          // do M.reset(r, c);
          // do M.reset(r, c+1);
          // do M.reset(r+1 ,c);
          // do M.set(r+1, c-1);
          // do M.set(r+1, c);
          // do M.set(r+1, c+1);
          // do M.set(r+2 ,c);
          // outside loop r+1
        }
      }
    }

}